{"ast":null,"code":"var _jsxFileName = \"X:\\\\Lambda-Projects\\\\front-end\\\\african-marketplace\\\\src\\\\components\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport * as yup from \"yup\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nfunction SignUp(props) {\n  const formSchema = yup.object().shape({\n    name: yup.string().min(2, `Must be more than 2 characters`).required(\"Name is a required field\"),\n    username: yup.string().min(2, 'Must be more than 2 character').required(\"Username is a required field\"),\n    email: yup.string().email(\"must be a valid email address\").required(\"must include a valid email\"),\n    password: yup.string().required('Password is required'),\n    // passwordConfirmation: yup.string(),\n    // .oneOf([yup.ref('password'), null], 'Passwords must match'),\n    location: yup.string().required('Please type a valid city')\n  }); //set state for form\n\n  const [formState, setFormState] = useState({\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    location: \"\"\n  }); // set state for errors\n\n  const [errors, setErrors] = useState({\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    location: \"\"\n  });\n  const [post, setPost] = useState([]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth().post(\"https://sauti-africa.herokuapp.com/api/register\", formState).then(res => {\n      setPost(res.data); // get just the form data from the REST api\n\n      console.log(\"success\", res);\n      props.history.push('/'); // reset form if successful\n\n      setFormState({\n        name: '',\n        email: '',\n        password: '',\n        location: \"\"\n      });\n    }).catch(err => console.log(err.response));\n  };\n\n  const validateChange = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\"\n      });\n    }).catch(err => {\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  const inputChange = e => {\n    e.persist();\n    const newFormData = { ...formState,\n      [e.target.name]: e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    };\n    validateChange(e);\n    setFormState(newFormData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"centeredToPageForms\",\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), errors.name.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, errors.name) : null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), errors.name.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 45\n    }\n  }, errors.name) : null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email Address\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), errors.email.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 47\n    }\n  }, errors.email) : null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 50\n    }\n  }, errors.password) : null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    type: \"text\",\n    placeholder: \"City\",\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), errors.location.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 49\n    }\n  }, errors.location) : null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Submit\"));\n}\n\nexport default SignUp;","map":{"version":3,"sources":["X:/Lambda-Projects/front-end/african-marketplace/src/components/SignUp.js"],"names":["React","useState","yup","axiosWithAuth","SignUp","props","formSchema","object","shape","name","string","min","required","username","email","password","location","formState","setFormState","errors","setErrors","post","setPost","formSubmit","e","preventDefault","then","res","data","console","log","history","push","catch","err","response","validateChange","reach","target","validate","value","valid","inputChange","persist","newFormData","type","checked","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,QAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAClCC,IAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,GAAb,CAAkB,CAAlB,EAAsB,gCAAtB,EAAuDC,QAAvD,CAAgE,0BAAhE,CAD4B;AAElCC,IAAAA,QAAQ,EAAEX,GAAG,CAACQ,MAAJ,GAAaC,GAAb,CAAkB,CAAlB,EAAqB,+BAArB,EAAsDC,QAAtD,CAA+D,8BAA/D,CAFwB;AAGlCE,IAAAA,KAAK,EAAEZ,GAAG,CAACQ,MAAJ,GAAaI,KAAb,CAAmB,+BAAnB,EAAoDF,QAApD,CAA6D,4BAA7D,CAH2B;AAIlCG,IAAAA,QAAQ,EAAEb,GAAG,CAACQ,MAAJ,GAAaE,QAAb,CAAsB,sBAAtB,CAJwB;AAKlC;AACA;AACAI,IAAAA,QAAQ,EAAEd,GAAG,CAACQ,MAAJ,GAAaE,QAAb,CAAsB,0BAAtB;AAPwB,GAAnB,CAAnB,CAFmB,CAYnB;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC;AACvCQ,IAAAA,IAAI,EAAE,EADiC;AAEvCI,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,KAAK,EAAE,EAHgC;AAIvCC,IAAAA,QAAQ,EAAE,EAJ6B;AAKvCC,IAAAA,QAAQ,EAAE;AAL6B,GAAD,CAA1C,CAbmB,CAoBnB;;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,EAD2B;AAEjCI,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,QAAQ,EAAE,EAJuB;AAKjCC,IAAAA,QAAQ,EAAE;AALuB,GAAD,CAApC;AAQA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMsB,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAtB,IAAAA,aAAa,GACVkB,IADH,CACQ,iDADR,EAC2DJ,SAD3D,EAEGS,IAFH,CAEQC,GAAG,IAAI;AAEXL,MAAAA,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP,CAFW,CAEQ;;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;AACAtB,MAAAA,KAAK,CAAC0B,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EAJW,CAMX;;AACAd,MAAAA,YAAY,CAAC;AACTT,QAAAA,IAAI,EAAE,EADG;AAETK,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,QAAQ,EAAE,EAHD;AAITC,QAAAA,QAAQ,EAAE;AAJD,OAAD,CAAZ;AAOD,KAhBH,EAiBGiB,KAjBH,CAiBSC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAhB,CAjBhB;AAkBD,GApBH;;AAsBE,QAAMC,cAAc,GAAGZ,CAAC,IAAI;AAC1BtB,IAAAA,GAAG,CACAmC,KADH,CACS/B,UADT,EACqBkB,CAAC,CAACc,MAAF,CAAS7B,IAD9B,EAEG8B,QAFH,CAEYf,CAAC,CAACc,MAAF,CAASE,KAFrB,EAGGd,IAHH,CAGQe,KAAK,IAAI;AACbrB,MAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,SAACK,CAAC,CAACc,MAAF,CAAS7B,IAAV,GAAiB;AAFT,OAAD,CAAT;AAID,KARH,EASGwB,KATH,CASSC,GAAG,IAAI;AACZd,MAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,SAACK,CAAC,CAACc,MAAF,CAAS7B,IAAV,GAAiByB,GAAG,CAACf,MAAJ,CAAW,CAAX;AAFT,OAAD,CAAT;AAID,KAdH;AAeD,GAhBD;;AAkBA,QAAMuB,WAAW,GAAGlB,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACmB,OAAF;AAEA,UAAMC,WAAW,GAAG,EAClB,GAAG3B,SADe;AAElB,OAACO,CAAC,CAACc,MAAF,CAAS7B,IAAV,GAAiBe,CAAC,CAACc,MAAF,CAASO,IAAT,KAAkB,UAAlB,GAA+BrB,CAAC,CAACc,MAAF,CAASQ,OAAxC,GAAkDtB,CAAC,CAACc,MAAF,CAASE;AAF1D,KAApB;AAKAJ,IAAAA,cAAc,CAACZ,CAAD,CAAd;AACAN,IAAAA,YAAY,CAAC0B,WAAD,CAAZ;AACD,GAVD;;AAaF,sBACI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAsC,IAAA,QAAQ,EAAErB,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAIQ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,QAAQ,EAAEmB,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EASWvB,MAAM,CAACV,IAAP,CAAYsC,MAAZ,GAAqB,CAArB,gBAAyB;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB5B,MAAM,CAACV,IAA7B,CAAzB,GAAkE,IAT7E,eAWQ;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,QAAQ,EAAEiC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXR,EAgBWvB,MAAM,CAACV,IAAP,CAAYsC,MAAZ,GAAqB,CAArB,gBAAyB;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB5B,MAAM,CAACV,IAA7B,CAAzB,GAAkE,IAhB7E,eAmBQ;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,eAHhB;AAII,IAAA,QAAQ,EAAEiC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBR,EAwBWvB,MAAM,CAACL,KAAP,CAAaiC,MAAb,GAAsB,CAAtB,gBAA2B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB5B,MAAM,CAACL,KAA7B,CAA3B,GAAsE,IAxBjF,eA2BQ;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,QAAQ,EAAE4B,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BR,EAgCWvB,MAAM,CAACJ,QAAP,CAAgBgC,MAAhB,GAAyB,CAAzB,gBAA8B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB5B,MAAM,CAACJ,QAA7B,CAA9B,GAA4E,IAhCvF,eAmCQ;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,QAAQ,EAAE2B,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCR,EAwCWvB,MAAM,CAACH,QAAP,CAAgB+B,MAAhB,GAAyB,CAAzB,gBAA6B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB5B,MAAM,CAACH,QAA7B,CAA7B,GAA0E,IAxCrF,eAyCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCN,CADJ;AA6CH;;AAED,eAAeZ,MAAf","sourcesContent":["import React, { useState} from 'react';\r\nimport * as yup from \"yup\";\r\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\n\r\nfunction SignUp(props) {\r\n\r\n    const formSchema = yup.object().shape({\r\n        name: yup.string().min( 2, `Must be more than 2 characters`).required(\"Name is a required field\"),\r\n        username: yup.string().min( 2, 'Must be more than 2 character').required(\"Username is a required field\"),\r\n        email: yup.string().email(\"must be a valid email address\").required(\"must include a valid email\"),\r\n        password: yup.string().required('Password is required'),\r\n        // passwordConfirmation: yup.string(),\r\n        // .oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n        location: yup.string().required('Please type a valid city'),\r\n    })\r\n\r\n    //set state for form\r\n    const [formState, setFormState] = useState({\r\n        name: '', \r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        location: \"\"\r\n    });\r\n    // set state for errors\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        username: '', \r\n        email: '',\r\n        password: '',\r\n        location: \"\"\r\n    });\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault();\r\n        axiosWithAuth()\r\n          .post(\"https://sauti-africa.herokuapp.com/api/register\", formState)\r\n          .then(res => {\r\n           \r\n            setPost(res.data); // get just the form data from the REST api\r\n            console.log(\"success\", res);\r\n            props.history.push('/')\r\n            \r\n            // reset form if successful\r\n            setFormState({\r\n                name: '', \r\n                email: '',\r\n                password: '',\r\n                location: \"\"\r\n            });\r\n\r\n          })\r\n          .catch(err => console.log(err.response));\r\n      };\r\n    \r\n      const validateChange = e => {\r\n        yup\r\n          .reach(formSchema, e.target.name)\r\n          .validate(e.target.value)\r\n          .then(valid => {\r\n            setErrors({\r\n              ...errors,\r\n              [e.target.name]: \"\"\r\n            });\r\n          })\r\n          .catch(err => {\r\n            setErrors({\r\n              ...errors,\r\n              [e.target.name]: err.errors[0]\r\n            });\r\n          });\r\n      };\r\n    \r\n      const inputChange = e => {\r\n        e.persist();\r\n\r\n        const newFormData = {\r\n          ...formState,\r\n          [e.target.name]: e.target.type === \"checkbox\" ? e.target.checked : e.target.value\r\n        };\r\n    \r\n        validateChange(e);\r\n        setFormState(newFormData);\r\n      };\r\n\r\n\r\n    return (\r\n        <form className=\"centeredToPageForms\" onSubmit={formSubmit}>\r\n            <h1>Sign Up</h1>\r\n\r\n                {/* Name */}\r\n                <input \r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    onChange={inputChange}\r\n                />{errors.name.length > 0 ? <p className='error'>{errors.name}</p> : null}\r\n\r\n                <input \r\n                    name='username'\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    onChange={inputChange}\r\n                />{errors.name.length > 0 ? <p className='error'>{errors.name}</p> : null}\r\n                \r\n                {/* Email */}\r\n                <input \r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Email Address'\r\n                    onChange={inputChange}\r\n                />{errors.email.length > 0 ? (<p className='error'>{errors.email}</p>) : null}\r\n                \r\n                {/* Password */}\r\n                <input \r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={inputChange}\r\n                />{errors.password.length > 0 ? (<p className='error'>{errors.password}</p>) : null}\r\n                \r\n                {/* Location - city */}\r\n                <input \r\n                    name='location'\r\n                    type='text'\r\n                    placeholder='City'\r\n                    onChange={inputChange}\r\n                />{errors.location.length > 0 ? <p className='error'>{errors.location}</p> : null}\r\n              <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}